
@model PagedList.IPagedList<AcademyBank.Models.Card>
@using PagedList;
@using PagedList.Mvc;
@using AcademyBank.Web.Models;
@using AcademyBank.Models.Enums;
@{
	Layout = "_LayoutAdminCp";
	var currentPage = (ViewContext.HttpContext.Request.Query["page"].Count == 0)
		? 1
		: int.Parse(ViewContext.HttpContext.Request.Query["page"]);
	Layout = "_LayoutAdminCp";
	int id = 0;


	int counter = (Model.PageSize * (currentPage - 1)) + 1;

	var urlParamOrdervalue = ViewContext.HttpContext.Request.Query["orderBy"];
	var selectedCardStatus = ViewContext.HttpContext.Request.Query["cardStatus"];

}

<h3 class="ui horizontal divider header">
	Filter table
</h3>


<form class="form-inline" style="width:350px;display:flex;flex-direction:column;">
	<select style="width:350px;" class="custom-select my-1 mr-sm-2" id="inlineFormCustomSelectPref" onchange="getSelected(this.options[this.selectedIndex].value)">


		@foreach (var item in ViewData["CardStatuses"] as List<string>)
		{
			if (selectedCardStatus.Count == 0 && item == CardStatus.Pending.ToString())
			{
				<option selected value="@item">@item</option>
            }
            else if (selectedCardStatus == item)
            {
				<option selected value="@item">@item</option>
			}
			else
			{
				<option value="@item">@item</option>
			}


		}
	</select>


</form>


<h3 class="ui horizontal divider header">
	@if (selectedCardStatus.Count == 0)
	{
		<span>Pending cards</span>
	}
	else
	{
		<span>@selectedCardStatus cards</span>
	}
</h3>

@{
    if (Model.Count == 0)
    {
		<h4 class="ui horizontal divider header">
			Data Not found
		</h4>
    }
    else
	{
		
<table class="ui sortable celled table">
	<thead>
		<tr>
			<th>№</th>
			@{
				Html.RenderPartial("~/Views/Partials/_AdminTableSortablePartial.cshtml", new List<TablePartialModel> {
					new TablePartialModel { UrlParamOrdervalue = urlParamOrdervalue, Order = "Firstname", OrderDesc="FirstnameDesc", DisplayName = "Firstname",Action = "CardsManagement", Controller = "Admin", CurrentPage =currentPage, SelectedCardStatus = selectedCardStatus },
					new TablePartialModel { UrlParamOrdervalue = urlParamOrdervalue, Order = "Lastname", OrderDesc="LastnameDesc", DisplayName = "Lastname",Action = "CardsManagement", Controller = "Admin", CurrentPage =currentPage, SelectedCardStatus = selectedCardStatus },
					new TablePartialModel { UrlParamOrdervalue = urlParamOrdervalue, Order = "Mail", OrderDesc="MailDesc", DisplayName = "Mail",Action = "CardsManagement", Controller = "Admin", CurrentPage =currentPage, SelectedCardStatus = selectedCardStatus },
					new TablePartialModel { UrlParamOrdervalue = urlParamOrdervalue, Order = "Phone", OrderDesc="PhoneDesc", DisplayName = "Phone",Action = "CardsManagement", Controller = "Admin", CurrentPage =currentPage , SelectedCardStatus = selectedCardStatus},
					new TablePartialModel { UrlParamOrdervalue = urlParamOrdervalue, Order = "CardType", OrderDesc="CardTypeDesc", DisplayName = "Card type",Action = "CardsManagement", Controller = "Admin", CurrentPage =currentPage, SelectedCardStatus = selectedCardStatus },
					});
			}
			<th>Status</th>
			@if (selectedCardStatus != CardStatus.Rejected.ToString() && selectedCardStatus != CardStatus.Expired.ToString())
			{

				<th>Actions</th>
			}
		</tr>
	</thead>
	@foreach (var item in Model)
	{
		id = item.Id;
		<tr>
			<td>@(counter++)</td>
			<td>
				@Html.DisplayFor(modelItem => item.Account.User.UserInfo.FirstName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Account.User.UserInfo.LastName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Account.User.Email)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Account.User.PhoneNumber)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.CardType)
			</td>
			<td style="@(item.Status == CardStatus.Active.ToString()
			? "color:green"
			: (item.Status == CardStatus.Pending.ToString()
			? "color:orange"
			: "color:red"))">
				@item.Status
			</td>
			@if (selectedCardStatus != CardStatus.Rejected.ToString() && selectedCardStatus != CardStatus.Expired.ToString())
			{
				<td>
					@if (selectedCardStatus == CardStatus.Pending.ToString() || selectedCardStatus.Count == 0)
					{
						<a asp-controller="Admin" asp-action="CreateCard" asp-route-id="@item.Id" data-tooltip="Create card" data-position="bottom center" class="create-icon"><i class="plus icon"></i></a>
						<a data-id="@id" data-tooltip="Reject" data-position="bottom center" class="myBtn reject-icon"><i class="times icon"></i></a>
					}
					else if (selectedCardStatus == CardStatus.Active.ToString())
					{
						<a asp-action="BlockCard" asp-controller="Admin" asp-route-id="@item.Id" data-tooltip="Block" data-position="bottom center" class="reject-icon"><i class="times icon"></i></a>
					}
					else if (selectedCardStatus == CardStatus.Blocked.ToString())
					{
						<a asp-controller="Admin" asp-action="UnblockCard" asp-route-id="@item.Id" data-tooltip="Unblock" data-position="bottom center" class="approve-icon"><i class="check icon"></i></a>
					}
				</td>
			}
		</tr>
	}



</table>

<hr />

@Html.Partial("~/Views/Partials/_TablePagingFooterPartial.cshtml", new TablePagingModel { Action = "CardsManagement", Controller = "Admin", UrlParamOrdervalue = urlParamOrdervalue, CurrentPage = currentPage, PageCount = Model.PageCount })

<partial name="_PopUpWindowForRejectButtons" model='new PopUpWindowViewModel() {ControllerName="Admin",ActionName="RejectCard",MainAction="CardsManagement",Id=id }' />



	}
}
<script>
	document.getElementById("inlineFormCustomSelectPref").onchange = function () {
		var value = document.getElementById("inlineFormCustomSelectPref").value;
		console.log(value);
		window.location.href = "@Url.Action("CardsManagement", "Admin", new { orderBy = urlParamOrdervalue, page = currentPage })" + "&cardStatus=" + value

	};
</script>
